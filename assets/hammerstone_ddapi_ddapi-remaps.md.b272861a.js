import{_ as e,c as a,o as t,d as r}from"./app.289883e3.js";const b=JSON.parse('{"title":"DDAPI Remaps","description":"","frontmatter":{},"headers":[{"level":3,"title":"gameObject.lua","slug":"gameobject-lua","link":"#gameobject-lua","children":[]},{"level":3,"title":"resource.lua","slug":"resource-lua","link":"#resource-lua","children":[]},{"level":3,"title":"craftable.lua","slug":"craftable-lua","link":"#craftable-lua","children":[]},{"level":3,"title":"evolvingObject.lua","slug":"evolvingobject-lua","link":"#evolvingobject-lua","children":[]},{"level":3,"title":"harvestable.lua","slug":"harvestable-lua","link":"#harvestable-lua","children":[]},{"level":3,"title":"storage.lua","slug":"storage-lua","link":"#storage-lua","children":[]},{"level":3,"title":"Object Sets (serverGOM.lua)","slug":"object-sets-servergom-lua","link":"#object-sets-servergom-lua","children":[]}],"relativePath":"hammerstone/ddapi/ddapi-remaps.md","lastUpdated":1681115294000}'),o={name:"hammerstone/ddapi/ddapi-remaps.md"},s=r('<h1 id="ddapi-remaps" tabindex="-1">DDAPI Remaps <a class="header-anchor" href="#ddapi-remaps" aria-hidden="true">#</a></h1><p>This page provides Hammerstone alternatives to shadowing base lua files. If a file isn&#39;t listed here, you likely need to create it, shadow it, and interact with Sapiens base code normally.</p><h3 id="gameobject-lua" tabindex="-1">gameObject.lua <a class="header-anchor" href="#gameobject-lua" aria-hidden="true">#</a></h3><p>Every &#39;thing&#39; in Sapiens must be registered as a game object. For example; apple, mammoth, and fireplace are all game-objects.</p><p>Hammerstone: <code>hammerstone:object_definition/hs_object</code></p><h3 id="resource-lua" tabindex="-1">resource.lua <a class="header-anchor" href="#resource-lua" aria-hidden="true">#</a></h3><p>A resource is like a &#39;category&#39; for game objects. For example &#39;apple&#39; resource might contain &#39;apple&#39;, &#39;rotten_apple&#39; and &#39;crab_apple&#39;.</p><p>Hammerstone: <code>hammerstone:object_definition/hs_resource</code></p><h3 id="craftable-lua" tabindex="-1">craftable.lua <a class="header-anchor" href="#craftable-lua" aria-hidden="true">#</a></h3><p>A craftable is a &quot;recipe&quot; for creating new game objects by combining or working with other game objects. For example you can craft &#39;campfireRoastedBeetroot&#39; by roasting beets at a campfire.</p><p>Hammerstone: <code>hammerstone:recipe_definition</code></p><h3 id="evolvingobject-lua" tabindex="-1">evolvingObject.lua <a class="header-anchor" href="#evolvingobject-lua" aria-hidden="true">#</a></h3><p>Evolving objects are &#39;transformations&#39; of existing objects. For example meat may become rotten, or hay may become dry. Evolving objects also allow despawning, such as rotten meat, which removes itself after some time.</p><p>Hammerstone: <code>hammerstone:object_definition/hs_evolving_object</code></p><h3 id="harvestable-lua" tabindex="-1">harvestable.lua <a class="header-anchor" href="#harvestable-lua" aria-hidden="true">#</a></h3><p>Harvestables are in-game objects which can be &quot;harvested&quot; for resources. The most common example would be animal carcases.</p><p>Hammerstone: <code>hammerstone:object_definition/hs_harvestable</code></p><h3 id="storage-lua" tabindex="-1">storage.lua <a class="header-anchor" href="#storage-lua" aria-hidden="true">#</a></h3><p>Storage file in Sapiens defines both the &#39;carry&#39; logic for an item, as well as it&#39;s ability to be stored in storage areas.</p><p>Hammerstone: <code>hammerstone:storage_definition</code></p><h3 id="object-sets-servergom-lua" tabindex="-1">Object Sets (serverGOM.lua) <a class="header-anchor" href="#object-sets-servergom-lua" aria-hidden="true">#</a></h3><p>Object Sets are like &#39;groupings&#39; for objects, such as all mobs, or all lit campfires. These object sets can be used to run some logic in other systems.</p><p>Hammerstone: <code>hammerstone:global_definitions/hs_object_sets</code></p><h1 id="no-remaps" tabindex="-1">No Remaps <a class="header-anchor" href="#no-remaps" aria-hidden="true">#</a></h1><p>These files don&#39;t currently have a &#39;DDAPI&#39; solution. In these cases, you should just define them normally:</p><ul><li>animations.lua</li><li>sapienObjectSnapping.lua</li></ul>',26),l=[s];function i(n,c,d,h,m,u){return t(),a("div",null,l)}const g=e(o,[["render",i]]);export{b as __pageData,g as default};
