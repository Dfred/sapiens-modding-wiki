import{_ as s,o as a,c as e,U as l}from"./chunks/framework.1eef7d9b.js";const C=JSON.parse('{"title":"Logger","description":"","frontmatter":{},"headers":[],"relativePath":"hammerstone/logger.md","filePath":"hammerstone/logger.md","lastUpdated":1688236295000}'),o={name:"hammerstone/logger.md"},n=l('<h1 id="logger" tabindex="-1">Logger <a class="header-anchor" href="#logger" aria-label="Permalink to &quot;Logger&quot;">​</a></h1><p>The logger is very simple, it merely adds a level of distinction to your log messages.</p><h2 id="including" tabindex="-1">Including <a class="header-anchor" href="#including" aria-label="Permalink to &quot;Including&quot;">​</a></h2><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> logger </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">mjrequire</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">hammerstone/logging</span><span style="color:#89DDFF;">&quot;</span></span></code></pre></div><h2 id="using" tabindex="-1">Using <a class="header-anchor" href="#using" aria-label="Permalink to &quot;Using&quot;">​</a></h2><p>Log message:</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">logger</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Example Message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>Warn message:</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">logger</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">warn</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Example Message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>Error message:</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">logger</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">error</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Example Message</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>',11),t=[n];function p(r,c,i,g,d,u){return a(),e("div",null,t)}const h=s(o,[["render",p]]);export{C as __pageData,h as default};
